# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# append to history file instead of overwriting
shopt -s histappend

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes


# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls -F --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# colored GCC warnings and errors
export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# fixes tmux colors
alias tmux-ssh="TERM=screen-256color tmux"
alias vi='vim'
# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.
alias fuck='sudo $(history -p \!\!)'
alias tv='terminal_velocity'

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

#export TERM=xterm-256color
# Base16 Shell
#BASE16_SHELL="$HOME/.config/base16-shell/base16-monokai.dark.sh"
#[[ -s $BASE16_SHELL ]] && source $BASE16_SHELL



function __prompt_command() {
    local EXIT="$?"             # This needs to be first
    PS1=""
    if [[ $VIRTUAL_ENV != "" ]]
    then
       PS1+="(${VIRTUAL_ENV##*/}) "
    fi

    local RCol='\[\e[0m\]'

    local Red='\[\e[0;31m\]'
    local BRed='\[\e[1;31m\]'
    local Gre='\[\e[0;32m\]'
    local BYel='\[\e[1;33m\]'
    local BBlu='\[\e[1;34m\]'
    local Blu='\[\e[0;34m\]'
    local Pur='\[\e[0;35m\]'

    local exitCode=
    local SESSION_TYPE=

    if [ -n "$SSH_CLIENT" ] || [ -n "$SSH_TTY" ]; then
      SESSION_TYPE=ssh
    else
      case $(ps -o comm= -p $PPID) in
        sshd|*/sshd) SESSION_TYPE=ssh;;
      esac
    fi

    if [ $SESSION_TYPE ]; then
       PS1+="${Red}($SESSION_TYPE)"
    else
       PS1+="${Blu}"
    fi

    if [ $EXIT != 0 ]; then
        exitCode="${Red}$EXIT${RCol}"      # Add red if exit code non 0
    else
        exitCode="${Gre}$EXIT${RCol}"
    fi

    PS1+="\h: ${Pur}\w"
    local branch=`git branch 2>/dev/null | grep \* | awk '{print $2}'`
    if [ $branch ]
    then PS1+=" ${BYel}($branch)"
    fi
    PS1+=" ${RCol}[\t]"

#    bkgrnd=`jobs | pythex -g '\[(\d+)\]'
#    [ $bkgrnd ] && bkgrnd="($bkgrnd)"

    PS1+="\n${RCol}[${exitCode}]${BYel}${bkgrnd}$ ${RCol}"
}

export PROMPT_COMMAND=__prompt_command  # Func to gen PS1 after CMDs
set -o vi
if [ $TMUX ]; then TERM=screen-256color; fi
export CUDA_HOME=/usr/local/cuda-10.0
export PATH="$CUDA_HOME/bin:$PATH"
export AVA_CHANNEL="LOCAL"
export AVA_WPOOL="TRUE"

PATH="/opt/cisco/anyconnect:/home/thunt/perl5/bin${PATH+:}${PATH}"; export PATH;
PERL5LIB="/home/thunt/perl5/lib/perl5${PERL5LIB+:}${PERL5LIB}"; export PERL5LIB;
PERL_LOCAL_LIB_ROOT="/home/thunt/perl5${PERL_LOCAL_LIB_ROOT+:}${PERL_LOCAL_LIB_ROOT}"; export PERL_LOCAL_LIB_ROOT;
PERL_MB_OPT="--install_base \"/home/thunt/perl5\""; export PERL_MB_OPT;
PERL_MM_OPT="INSTALL_BASE=/home/thunt/perl5"; export PERL_MM_OPT;

export EDITOR=vim
export VISUAL=vim


#. /home/thunt/torch/install/bin/torch-activate
export CUDA_HOME=/usr/local/cuda-10.0
export PATH="$CUDA_HOME/bin:$HOME/.local/bin:$PATH"
export AVA_WPOOL="TRUE"
export AVA_CHANNEL="TCP"
export GOPATH=$HOME/go
export PATH="$GOPATH/bin:/usr/local/go/bin:$PATH"
export TZ="UTC"
